1. Compile the C file with -g (which is default option is also equivalent to g2) 

we can also compile with g3 which sets more debug points 

2. We can copy debug symbols to a different file with 'objcopy'

objcopy --only-keep-debug compiled-file object-file-to-be-created


3. We can also strip the compiled file from the debug sumbols with 'strip' tool

  strip --strip-debug --strip-unneeded 
  
  strip-unneeded is used to strip off all debug symbols and is useful in production environment

4. To add debug symbols to a file use 'objcopy'

objcopy --add-gnu-debug=Debug-file new-file

5. after compiling the C file with -g option we open it with gdb and can use the following options

info sources 
info variables (this doesnot show local variables)
info scope function (to find local variables) 
info functions


6. We can use the 'nm' tool to get the symbols out of the file and flags can be used to sort them etc 

7. strace to check the flow of a binary in execution (SYSCALL MONITORING)

we can use the following flags to make it better

-o = to output into a file
-t = to add timestamps
-r = relative timestamping

We can filter system calls with -e flag

eg - strace -e send,recv nc google.com 80 | grep 53     = this will filter send and recv systemcall that goes or comes from the DNS
 

8. We can tap in to a running process with "-p " along with the process id. And we have to run it as root or use the sudo command

sudo strace -p <process id>

9. We can also use the -c flag to get the statistics on Syscalls

strace -c <executable> <arguments>


